# This file contains details about how to execute kure inside a container while persisting the information.
services:
  # Run using "docker-compose run kure"
  kure:
    image: gastonpalomeque/kure:latest
    command: sh # Use the -c flag to initialize the container with a specific command, e.g. sh -c "kure session"
    # environment:
      #   - KURE_CONFIG: path/to/config -> Put the configuration file elsewhere by setting its path in the environment variable
    volumes:
      # Volume
      - <volume-name>:/{$HOME}/.kure
      
      # Bind mount: default
      - ${HOME}/.kure:/{$HOME}/.kure
      
      # Bind mount: custom
      - ${KURE_CONFIG}:/{$HOME}/.kure/kure.yaml # "database.path" field must point to the database inside the container
      - <host/db/path>:/{$HOME}/.kure/kure.db # The database can be placed anywhere as long as its path is specified in the configuration file
      

  # In the case of kure-secure, the bind mount/volume must be owned by the same uid on both the host and the container. Docker does not support id-mapped mounts yet.
  # Run using "docker-compose run kure-secure"
  kure-secure:
    image: gastonpalomeque/kure-secure:latest
    command: sh
    environment: 
      - USER: gandalf
      - UID: 10001
    cap_drop:
      - all
    security_opt:
      - no-new-privileges
